name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          
      - name: Install Staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest
      
      - name: Install Greptile
        run: go install github.com/greptile/greptile/cmd/greptile@latest
      
      - name: Go Vet
        run: go vet ./...
        
      - name: Staticcheck
        run: staticcheck ./...
      
      - name: Greptile Lint
        run: greptile lint ./...
        env:
          GREPTILE_TOKEN: ${{ secrets.GREPTILE_TOKEN }}
          
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg sqlite3 libsqlite3-dev
      
      - name: Test
        run: go test -v ./... -coverprofile=coverage.out
      
      - name: Coverage Report
        run: go tool cover -func=coverage.out
      
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage.out
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      
      - name: Build
        run: go build -v ./cmd/archiver
      
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: archiver
          path: archiver 